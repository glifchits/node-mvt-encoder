'use strict'; // code generated by pbf v3.0.5

// tile ========================================

var tile = exports.tile = {};

tile.read = function (pbf, end) {
    return pbf.readFields(tile._readField, {layers: []}, end);
};
tile._readField = function (tag, obj, pbf) {
    if (tag === 3) obj.layers.push(tile.layer.read(pbf, pbf.readVarint() + pbf.pos));
};
tile.write = function (obj, pbf) {
    if (obj.layers) for (var i = 0; i < obj.layers.length; i++) pbf.writeMessage(3, tile.layer.write, obj.layers[i]);
};

tile.GeomType = {
    "Unknown": 0,
    "Point": 1,
    "LineString": 2,
    "Polygon": 3
};

// tile.value ========================================

tile.value = {};

tile.value.read = function (pbf, end) {
    return pbf.readFields(tile.value._readField, {string_value: "", float_value: 0, double_value: 0, int_value: 0, uint_value: 0, sint_value: 0, bool_value: false}, end);
};
tile.value._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.string_value = pbf.readString();
    else if (tag === 2) obj.float_value = pbf.readFloat();
    else if (tag === 3) obj.double_value = pbf.readDouble();
    else if (tag === 4) obj.int_value = pbf.readVarint(true);
    else if (tag === 5) obj.uint_value = pbf.readVarint();
    else if (tag === 6) obj.sint_value = pbf.readSVarint();
    else if (tag === 7) obj.bool_value = pbf.readBoolean();
};
tile.value.write = function (obj, pbf) {
    if (obj.string_value) pbf.writeStringField(1, obj.string_value);
    if (obj.float_value) pbf.writeFloatField(2, obj.float_value);
    if (obj.double_value) pbf.writeDoubleField(3, obj.double_value);
    if (obj.int_value) pbf.writeVarintField(4, obj.int_value);
    if (obj.uint_value) pbf.writeVarintField(5, obj.uint_value);
    if (obj.sint_value) pbf.writeSVarintField(6, obj.sint_value);
    if (obj.bool_value) pbf.writeBooleanField(7, obj.bool_value);
};

// tile.feature ========================================

tile.feature = {};

tile.feature.read = function (pbf, end) {
    return pbf.readFields(tile.feature._readField, {id: 0, tags: [], type: 0, geometry: []}, end);
};
tile.feature._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readVarint();
    else if (tag === 2) pbf.readPackedVarint(obj.tags);
    else if (tag === 3) obj.type = pbf.readVarint();
    else if (tag === 4) pbf.readPackedVarint(obj.geometry);
};
tile.feature.write = function (obj, pbf) {
    if (obj.id) pbf.writeVarintField(1, obj.id);
    if (obj.tags) pbf.writePackedVarint(2, obj.tags);
    if (obj.type) pbf.writeVarintField(3, obj.type);
    if (obj.geometry) pbf.writePackedVarint(4, obj.geometry);
};

// tile.layer ========================================

tile.layer = {};

tile.layer.read = function (pbf, end) {
    return pbf.readFields(tile.layer._readField, {version: 0, name: "", features: [], keys: [], values: [], extent: 0}, end);
};
tile.layer._readField = function (tag, obj, pbf) {
    if (tag === 15) obj.version = pbf.readVarint();
    else if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.features.push(tile.feature.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.keys.push(pbf.readString());
    else if (tag === 4) obj.values.push(tile.value.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 5) obj.extent = pbf.readVarint();
};
tile.layer.write = function (obj, pbf) {
    if (obj.version) pbf.writeVarintField(15, obj.version);
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.features) for (var i = 0; i < obj.features.length; i++) pbf.writeMessage(2, tile.feature.write, obj.features[i]);
    if (obj.keys) for (i = 0; i < obj.keys.length; i++) pbf.writeStringField(3, obj.keys[i]);
    if (obj.values) for (i = 0; i < obj.values.length; i++) pbf.writeMessage(4, tile.value.write, obj.values[i]);
    if (obj.extent) pbf.writeVarintField(5, obj.extent);
};
